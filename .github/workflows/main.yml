name: Build and Deploy FE to ECS

on:
  push:
    branches:
      - "main"

env:
  ECR_REACT_PORTFOLIO_IMAGE: ${{ vars.ECR_REACT_PORTFOLIO_IMAGE }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_REACT_PORTFOLIO_SERVICE: ${{ vars.ECS_REACT_PORTFOLIO_SERVICE }}

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GENERATE_SOURCEMAP: ${{ secrets.GENERATE_SOURCEMAP }}
      DISABLE_ESLINT_PLUGIN: ${{ secrets.DISABLE_ESLINT_PLUGIN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Dependencies
        run: npm install

      - name: Unit Tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: react-portfolio
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
